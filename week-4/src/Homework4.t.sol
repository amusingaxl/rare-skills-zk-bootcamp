// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import "forge-std/Test.sol";
import {console2} from "forge-std/console2.sol";
import {Curve, G1Point, G2Point} from "./Curve.sol";
import {Homework4} from "./Homework4.sol";

contract Homework4Test is Test {
    Homework4 internal hw = new Homework4();

    function testVerify() public view {
        G1Point memory a1 = G1Point(
            uint256(20453939078259811958859768391452073654460321168773748684493785442363495374770),
            uint256(9582859829925552874957318860636821932456214701004608986274201852321144884827)
        );
        G2Point memory b2 = G2Point(
            [
                uint256(11250881481802053272433085344954860163836935334660104203011962819973806923258),
                uint256(1848818876116234749390544260880876444092639086958017527930580174702785391685)
            ],
            [
                uint256(18116868713488296159229632679318022998883737978134426071571425412216259687791),
                uint256(233068252073423081298531035765631480831806125509024135002082856770146353782)
            ]
        );
        G1Point memory c1 = G1Point(
            uint256(4873079524557847867653965550062716553062346862158697560012111398864356025363),
            uint256(11422470166079944859104614283946245081791188387376113119760245565153108742933)
        );
        uint256 x1 = 64;
        uint256 x2 = 128;
        uint256 x3 = 256;

        assert(hw.verify(a1, b2, c1, x1, x2, x3));
    }
}
