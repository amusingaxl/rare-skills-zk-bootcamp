// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

import "forge-std/Test.sol";
import {console2} from "forge-std/console2.sol";
import {Curve, G1Point, G2Point} from "./Curve.sol";
import {Homework4} from "./Homework4.sol";

contract Homework4Test is Test {
    Homework4 internal hw = new Homework4();

    function testX() public {
        G1Point memory a1 = G1Point(
            19033251874843656108471242320417533909414939332036131356573128480367742634479,
            20792135454608030201903199625673964159744755218442260092768620403349374102584
        );
        G2Point memory b2 = G2Point(
            [
                uint256(11166086885672626473267565287145132336823242144708474818695443831501089511977),
                uint256(10576778712883087908382530888778326306865681986179249638025895353796469496812)
            ],
            [
                uint256(1513450333913810775282357068930057790874607011341873340507105465411024430745),
                uint256(20245151454212206884108313452940569906396451322269011731680309881579291004202)
            ]
        );
        G1Point memory c1 = G1Point(
            3932705576657793550893430333273221375907985235130430286685735064194643946083,
            18813763293032256545937756946359266117037834559191913266454084342712532869153
        );

        uint256 x1 = 5;
        uint256 x2 = 6;
        uint256 x3 = 7;

        assert(hw.verify(a1, b2, c1, x1, x2, x3));
    }
}
